<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta name="generator" content="HTML Tidy for HTML5 for Windows version 5.8.0" />
    <meta name="SMS-HtmlEditor-User" content="SimonV" />

    <meta http-equiv="content-type" content="text/html; charset=utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="SMS-HtmlEditor-State" content="Review" />
    <title>Deploy Check</title>
    <link href="../../../work.css" rel="stylesheet">
  </head>

  <body>
    ï»¿ 

    <h1>Deploy Check</h1>

    <h2>Information</h2>

    <p><br />
    </p>

    <p>Deploy Check can be used in Standard environment (Host to Store, Store to lanes) and eCommerce environment (Host to Virtual Store, Store to Virtual Store and Store to Virtual Lanes). In a standard environment, Deploy_Check.sql script is being executed while in an eCommerce environment the Deploy_check script calls the script xStore_Deploy_Check.sql.</p>

    <p><br />
    </p>

    <h2><strong>Deploy Check Process</strong></h2>

    <p><br />
    </p>

    <p>The dataset will be compared with Master's corresponding tables and fields. Deploy Check will produce results with the following three scenario cases:</p>

    <p><br />
    </p>

    <ul>
      <li>When an item or several items exist at the Master and do not exist at the Slave - <strong>add</strong> script will generate the external Add batch at the Master that will add missing item/s at the Slave by sending the missing fields to the slave via an external batch.</li>

      <li>When an item or several items do not exist at the Master and exist at the Slave - <strong>remove</strong> script will remove discontinued items at the Slave by sending a remove batch script in order to synchronize the data of the Slave to the Master.</li>

      <li>When an item or several items exist at the Master and also can be found at the Slave - the <strong>change</strong> script will compare the polled table field's checksum/s at the Master with the checksum from the dataset that was returned from Slave.<br />
       If the checksums does not match - the external change batch will be generated at the Master side. The batch will contain the changes in order to synchronize the data of the Slave to that of the Master</li>
    </ul>

    <p><br />
    </p>

    <p class="alert alert-warning"><strong>NOTE:</strong> <span class="auto-style6">Be advised that if the source of the deploy check contains orphan records, these orphan records in all tables (with the exception of the OBJ_TAB table) will be also be created at the receiving end.</span></p>

    <p><br />
    </p>

    <h2>The process flow of DEPLOY CHECK</h2>

    <p><br />
    </p>

    <p>DEPLOY CHECK uses the same pair of files: item_chk_rsp.sqi at the MASTER and item_chk_rsp.sqm at the SLAVE.</p>

    <p><br />
    </p>
    <img src="Deploy_Check_files/flow.png" /> 

    <p>&nbsp;</p>

    <p>DEPLOY CHECK supports multi-target capability. It compares records according to the list of the fields in the polling table/s with exception.<br />
     <strong>Items are being polled by the the target priority.</strong></p>

    <p><br />
    </p>

    <p>The user is able to collect the data, to make multi-target comparison and get data to those three group of batches (Add, Remove, Changed).</p>

    <p><br />
    </p>

    <p>For all local fields the collision is used&nbsp; between MASTER and SLAVE tables even though&nbsp; the tables might have different number of fields.The polling of the changes at the Slave is implemented by using HASHBYTES algorithm that will convert any polled item data to string and compare on all the fields at the target table(s). Master generates the HASHBYTES checksum according to the list of fields that are being polled at the Slave and compares checksums to make the conclusion if the change is needed.The polling is dynamic. The DEPLOY_CHECK is fast since it does not compare data field by field but calculates the checksum of all the fields excluding the exception list.</p>

    <p><br />
    </p>

    <p>The objective is to provide the user a tool capable of&nbsp; fast polling of large table(s) by comparing only checksums of the items' fields. &nbsp;</p>

    <p><br />
    </p>

    <h2><strong>Where should deploy check be run?</strong></h2>

    <p><br />
    </p>

    <p>It depends on coporate model your store falls into:</p>

    <p><br />
    </p>

    <ol>
      <li>
        <p class="indent4">Corporate managed store. Managed by a Host.&nbsp; Host does all item maintenance/pricing maintenance &gt; Run Deploy Check at host.&nbsp; Your stores will have a mirror copy of your host item tables.</p>
      </li>

      <li>
        <p class="indent4">Store manages some pricing events(Sale,Instore) . Host does item maintenance. &gt; Run Deploy Check at host but very important, add the price fields the store maintains to the Exclusion list of the Store's HOST_OFFICE.INI in the [DEPLOY_CHECK] section.&nbsp; I.E PRICE_EXCLUDE=F136,F137,F138,F144,F145,F1133,F1216,F1217</p>
      </li>

      <li>
        <p class="indent4">Non Corporate store/Not managed by host or no host &gt; Run Deploy Check at the store server so synchronize your lanes with the server and ensure item table integrity and consistency.</p>
      </li>
    </ol>

    <p><br />
    </p>

    <h2>How do I run Deploy Check?</h2>

    <p><br />
    </p>

    <ol>
      <li>Through scheduler as part of a weekly maintenance routine.</li>
    </ol>

    <p class="alert-info">&nbsp; N.B. Deploy Check uses batches to sync data so if your store or host is not Activating External automatically, the process will be halted until those batches are executed manually.</p>

    <p><br />
    </p>

    <p>&nbsp;2.&nbsp; Manually through the Deploy check button in <strong>Tools</strong> &gt; <strong>Deploy</strong> in Esuite <strong>Manage</strong></p>
    <img src="Deploy_Check_files/start_widget.png" /> 

    <h2>Items have been deleted from my store and/or orphan item now exist at my store. Why?</h2>

    <p><br />
    </p>

    <ol>
      <li>If items have been deleted from your store item tables it is because they did not exist in the Host Item tables and the deploy check process purged them.&nbsp; There will be a trail of this in the Archived batches at the Head Office server. Contact your head office to inquire.</li>

      <li>If orphan item exist at the store it is because orphan item exist at the host as well and those item have been copied from the host to the store database. Advise your head office.</li>
    </ol>

    <p><br />
    </p>

    <h2>My store is not in sync with the Host. Why is that?</h2>

    <p><br />
    </p>

    <p>Depending on how often the Deploy Check is scheduled from the host wll be a crucial piece of infomration is finding out why discrepancies exist in item tables between host and store.</p>

    <p><br />
    </p>

    <p>I.E. If Deploy Check is scheduled weekly, that means there was a deploy change or batch missed at some point during the week.&nbsp; The recommended course of action would be to begin by conuslting your old batches and asking your head office to do the same to see if all batches sent from head office match up with batches receivbed and merged at store.</p>

    <p><br />
    </p>

    <h2>How do I schedule Deploy Check to run weekly at my host?</h2>

    <p><br />
    </p>

    <p>Deploy Check already is in the Scheduler but it is not set&nbsp; to run on a regular basis by default.&nbsp;</p>

    <p><br />
    </p>
    <img src="Deploy_Check_files/scheduler_list.png" /> 

    <p><br />
    </p>

    <p>To modify its execution schedule, click on the task and then "Edit" at the bottom</p>

    <p><br />
    </p>
    <img src="Deploy_Check_files/sched_details.png" /> 

    <p><br />
    </p>

    <p>Choose a run interval (Days, Months, Minutes) Click on the "Last Date" field to populate it with a date and the "Next Date" field will automatically populate with the next time the task will run.</p>

    <p><br />
    </p>

    <p>Save Changes &gt;</p>
    <img src="Deploy_Check_files/sched_save.png" /> 

    <p><br />
    </p>

    <p><br />
    </p>

    <p>Restart the smshttps service for new changes to take effect.&nbsp;</p>

    <p><br />
    </p>
  </body>
</html>

