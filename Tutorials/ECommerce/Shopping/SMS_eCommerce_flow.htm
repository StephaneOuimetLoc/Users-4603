<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="SMS Help Document">
    <link type="text/css" href="/assets/code_prism/prism.css" rel="stylesheet">

    <meta http-equiv="content-type" content="text/html; charset=utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="SMS-HtmlEditor-State" content="Draft" />
    <title>eCommerce - Transaction Flow</title>
    <link href="../../../work.css" rel="stylesheet">
  </head>

  <body class="bg-white">
    ï»¿  <!-- #BeginTemplate "../../html_template.dwt" -->
            <!-- Title/Keywords edit on new documents -->
     <!-- #BeginEditable "doctitle" -->
     <!-- #EndEditable -->
      <a name="top"></a> <!-- Docs page layout -->
     <br>
     

    <h1><!-- #BeginEditable "Title" -->eCommerce - Transaction Flow <!-- #EndEditable -->
    </h1>

    <p><!-- #BeginEditable "tag_line" -->eCommerce <!-- #EndEditable -->
    </p>
    <!-- #BeginEditable "toc" -->

    <div class="toc-container shadow">
      <h2 class="toc-title">Table of Contents</h2>
    </div>
    <!-- #EndEditable -->

    <div class="article-contents">
      <!-- #BeginEditable "Body" -->

      <h2>Information</h2>

      <p>Here is the flow of online orders with eStore and mStore applications.</p>

      <h2><a name="Online_op">Online operations</a></h2>

      <p>Here are only the online operations performed by the customer (end user) on eStore and mStore applications:</p>

      <table class="table table-striped">
        <thead class="thead-dark">
          <tr>
            <th>Online operations performed by the customer</th>
          </tr>
        </thead>

        <tr>
          <td>
            <img src="SMS_eCommerce_flow_files/Flow_Online.png" height="277" width="999"><br>

            <ol>
              <li>Customer adds items to the cart, FCT 710.</li>

              <li>Customer clips wanted coupons to the transaction.</li>

              <li>
                Customer chooses between Suspend (FCT 376) or Checkout (FCT 720).

                <ol>
                  <li>If the customer chooses Suspend (Save button), the transaction ends there.</li>
                </ol>
              </li>

              <li>If the customer chooses Checkout, the shipping or picking method and time frame need to be selected.</li>

              <li>
                The next step is to choose the payment method. The customer can choose between Charge Account (FCT 106) or Credit Card (FCT 104).

                <ol>
                  <li>If the customer chooses Credit Card, the credit card information needs to be entered.</li>
                </ol>
              </li>

              <li>Then, the customer presses Submit. The function selected at the payment method level is then executed.</li>
            </ol>
          </td>
        </tr>
      </table>

      <h3><a name="Bg_op">Background operations</a></h3>

      <p>Here are some operations performed in the background between the time the order is submitted and the time the order is opened at the store level to be complete:</p>

      <table class="table table-striped">
        <thead class="thead-dark">
          <tr>
            <th>Installed as a Lane</th>
          </tr>
        </thead>

        <tr>
          <td>
            <img src="SMS_eCommerce_flow_files/Flow_Background_Lane.png" height="224" width="634"><br>

            <ol>
              <li>
                The eStore_pos_doc_submit.sqi script is run.

                <ol>
                  <li>FCT 106 : Charges the customer account</li>

                  <li>FCT 104 : Either saves the card information in SAL_HDR (encrypted) or processes the card for a Pre-Auth.</li>
                </ol>
              </li>

              <li>The FCT 378 is executed.</li>

              <li>The order is transferred to the Back office server.</li>

              <li>The order&nbsp; is changed as an ORDER (F1068) with a CLOSE status (F1067).</li>

              <li>Once the transfer is done, the Back office server processes the Loyalty to adjust the points (if installed).</li>

              <li>At last, an email is sent to the customer as an order confirmation using the template named trs_clt_sus_mail_exec.htm.<br>
              </li>
            </ol>
          </td>
        </tr>

        <tr>
          <th>Installed as Back office server with a Host</th>
        </tr>

        <tr>
          <td>
            <img src="SMS_eCommerce_flow_files/Flow_Background_BOS.png"><br>
             

            <ol>
              <li class="Steps">
                The eStore_pos_doc_submit script is executed.

                <ol>
                  <li>Runs FCT 106 (if selected).</li>

                  <li>Runs FCT 104 (if selected).</li>

                  <li>Runs FCT 378.</li>

                  <li>Transfer the order to the Head Office server (Host).</li>

                  <li>Set the transaction as an ORDER (F1068) CLOSED (F1067).</li>
                </ol>
              </li>

              <li class="Steps">Loyalty is then executed to adjust the points (if installed).</li>

              <li class="Steps">
                The sal_doc_sus_mail.sqi script is executed.

                <ol>
                  <li>Detects the selected local store.</li>

                  <li>Transfers the order to the Back office server of that local store.</li>

                  <li>Sends the Order Confirmation email to the customer using template sal_doc_sus_mail_exec.htm</li>
                </ol>
              </li>
            </ol>
          </td>
        </tr>
      </table>

      <h3><a name="Stores_op">Store operations</a></h3>

      <p>Here are only the operations performed at the store level to complete online orders.</p>

      <table class="table table-striped">
        <thead class="thead-dark">
          <tr>
            <th><a name="method1">Method 1: Complete the transaction using Back Office Workstation</a></th>
          </tr>
        </thead>

        <tr>
          <td>
            <img src="SMS_eCommerce_flow_files/Flow_Stores_Op.png"><br>

            <ol>
              <li>On a Back office Workstation, open <strong>L_SMS</strong>.</li>

              <li>In the <strong>Extended module</strong> of <strong>Selling</strong>.</li>

              <li>From in the <strong>Shipping</strong> tab.</li>

              <li>Select <strong>List From Sale Order</strong>.</li>

              <li>Select and <strong>open</strong> the transaction.</li>

              <li>Enter the quantity and <strong>Close</strong> the Shipping.</li>

              <li>An <strong>email</strong> is sent to the customer as Order Shipped.</li>

              <li>Go in the <strong>Invoicing</strong> tab.</li>

              <li>Select <strong>List from Shipping</strong>.</li>

              <li>Select and <strong>open</strong> the transaction.</li>

              <li>Select either <strong>Charge and Close</strong> (if Charge Account was chosen by the customer) or <strong>Credit Tender</strong> (if Credit was chosen by the customer).</li>

              <li>The <strong>Transaction</strong> is now <strong>closed</strong>.</li>

              <li>An <strong>email</strong> is sent to the customer with the final invoice and receipt.<br>
              <br>
              </li>
            </ol>
          </td>
        </tr>

        <tr>
          <th class="List"><a name="method2">Method 2: Complete the transaction using Lanes</a></th>
        </tr>

        <tr>
          <td>
            <img height="327" src="SMS_eCommerce_flow_files/Flow_Stores_Op_2.png" width="697"><br>
             

            <ol>
              <li>At the Lane</li>

              <li>Run FCT 371: Restore web orders</li>

              <li>Select the transaction in the list</li>

              <li>Press Subtotal</li>

              <li>
                Select Payment

                <ol>
                  <li>Charge Account</li>

                  <li>
                    Credit Card

                    <ol>
                      <li>Customer makes the payment</li>
                    </ol>
                  </li>
                </ol>
              </li>

              <li>Transaction closed.</li>
            </ol>
          </td>
        </tr>
      </table>

      <h3><a name="Item_flows">Item flows</a></h3>

      <p>This section concerns only the item's information flow, based on the type of installation.</p>

      <table class="table table-striped">
        <thead class="thead-dark">
          <tr>
            <th>Installed as a Lane</th>
          </tr>
        </thead>

        <tr>
          <td>
            <img height="67" src="SMS_eCommerce_flow_files/Flow_Items_Lane.png" width="447"><br>
             

            <p>This method is exactly the same as a normal LOC SMS lane.</p>

            <ol>
              <li>Store's clerk makes some item adjustments.</li>

              <li>Clerk deploys the changes.</li>

              <li>eCommerce servers receive the changes.<br>
              </li>
            </ol>
          </td>
        </tr>

        <tr>
          <th class="List">Installed as a Back office server with a Host (items managed at the Host)</th>
        </tr>

        <tr>
          <td>
            <img height="187" src="SMS_eCommerce_flow_files/Flow_Items_BOS.png" width="447"><br>
             

            <p>This method is exactly the same as a normal Host managing items and deploying them.</p>

            <ol>
              <li>The clerk makes some item adjustments at the Host using a back office workstation.</li>

              <li>Clerk deploys the changes.</li>

              <li>eCommerce servers receive the changes.</li>

              <li>Stores also receive the changes.<br>
              </li>
            </ol>
          </td>
        </tr>

        <tr>
          <th class="List">Installed as a Back office server with a Host. (Items managed at the Store)</th>
        </tr>

        <tr>
          <td>
            <img src="SMS_eCommerce_flow_files/Flow_Items_BOS_Stores.png"><br>
             

            <p>This method involves the stores to maintain their prices, items, inventory, etc. and then deploying these to the Host which are transferred to the eCommerce automatically.</p>

            <p>This method also involves two additional options to be installed: Deploy_SMSRSP and Deploy_xStore.</p>

            <ol>
              <li>Store's clerks make items adjustments and take the inventory.</li>

              <li>Items are deployed to the Host using Deploy_SMSRSP option.</li>

              <li>The Host receives the information then using the Universal Deploy, redeploys the information to the eCommerce servers on DWEB target group taking only the stores that are part of the SWEB target group using the Deploy_xStore option.</li>

              <li>eCommerce servers receive the information and automatically apply the changes and update the inventory.</li>
            </ol>
          </td>
        </tr>
      </table>

      <h3>Balancing &amp; reporting</h3>

      <p>Online orders reports are either on the Host server or on the Store server, depending on the scenario of the eCommerce solution installed.</p>

      <h3>Sales</h3>

      <table class="table table-striped">
        <thead class="thead-dark">
          <tr>
            <th style="width: 575px">eCommerce with a Store server environment</th>

            <th style="width: 575px">eCommerce with a Host server environment</th>
          </tr>
        </thead>

        <tr>
          <td style="width: 575px">The sales are available on the Store server once they are closed by a clerk or a cashier using either a regular Lane or a Back office workstation. They appear only after the Invoicing or final payment (lane) is done.<br>
           <br>
           The sales are all under the cashier or clerk operator number that completed the sale.</td>

          <td class="ListDark" style="width: 575px">The sales are available on the Host server once they are closed at the store level by a clerk or a cashier using either a regular Lane or a Back office workstation then, they are uploaded to the Host server via the Deploy_HO. They appear only after the Invoicing or final payment (lane) is done.<br>
           <br>
           The sales are all under the cashier or clerk operator number that completed the sale.</td>
        </tr>
      </table>

      <h3>Items viewed online</h3>

      <p>In the eStore / mStore applications, when a customer consults the details of an item, without adding it to the order and submits it, the item consulted was selected and voided automatically from the order. This information is stored in the totalizer 3016-Void tentative.</p>

      <p>The information is available in reports such as the Store Multi totals, under the 'Exceptions' section, see 'Void tentative'.</p>

      <p>This information can be added to a custom report if needed.</p>

      <h3>Cancel e-baskets</h3>

      <p>In the eStore / mStore applications, when a customer deletes a shopping list or logs-out without submitting the current order (new order is created at login), the system produces a cancelled basket. This information is stored in the totalizer 3017-Cancel e-basket.</p>

      <p>The information is available in reports such as the Store Multi totals under the 'Exceptions' section, see 'Cancel e-basket'.</p>
      <!-- #EndEditable -->
    </div>
    <!-- end of main container -->
    <a class="back-to-top shadow" href="#top">â²</a> 
<script type="text/javascript" src="/assets/jquery-3.5.1.min.js">
</script>
<script type="text/javascript" src="/assets/bootstrap.min.js">
</script>
<script type="text/javascript" src="/assets/tocbot412/tocbot.min.js">
</script>
<script type="text/javascript">
        tocbot.init({
            // Where to render the table of contents.
            tocSelector: '.toc',
            // Where to grab the headings to build the table of contents.
            contentSelector: '.article-contents',
            // Which headings to grab inside of the contentSelector element.
            headingSelector: 'h2',
            // For headings inside relative or absolute positioned containers within content.
            hasInnerContainers: true,
        });
    
</script>
<script type="text/javascript" src="/assets/code_prism/prism.js">
</script>
    <!-- #EndTemplate -->
  </body>
</html>

